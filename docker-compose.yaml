


# training service that fetches data from database (published by chat service) and saves
# trained model on disk (needs to update training state in db to avoid corrupted model reading)
# spark/Tensorflow/PyTorch based deep/machine learning

# data crawling service to queue content from web/newsletters/RSS feeds to Kafka

# kafka container to pull from crawler and push to chat

# chat container to use model to generate content, communicate with user and save answers to database

# database container to communicate between trainier and chat service

# warehouse service to archive the data after traning is done

version: '3'
services:
  db:
    image: postgres:11.4-alpine

  chat:
    build:
      context: chat
      dockerfile: chat/Dockerfile
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - db